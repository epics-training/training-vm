# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end

  config.vm.define "local" do |local|
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.

    distro = ENV['VAGRANT_VM_BOX'] || "debian"
    if distro == 'fedora' then
      local.vm.box = "fedora/40-cloud-base"

      # resize the original base image disk size
      local.vm.disk :disk, size: "150GB", primary: true

      # expand the root partition to fill the disk (btrfs specific so not in ansible)
      local.vm.provision "shell", inline: <<-SHELL
        growpart /dev/sda 4
        btrfs filesystem resize 1:max /
      SHELL
      use_apt = "false"
    elsif distro == 'debian' then
      local.vm.box = "debian/bookworm64"
      installer = "(apt-get update ; apt-get install -y ansible)"
      use_apt = "true"
    end

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    # local.vm.network "private_network", ip: "192.168.33.10"

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # local.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    # local.vm.synced_folder "../data", "/vagrant_data"

    # Disable the default share of the current code directory. Doing this
    # provides improved isolation between the vagrant box and your host
    # by making sure your Vagrantfile isn't accessible to the vagrant box.
    # If you use this you may want to enable additional shared subfolders as
    # shown above.
    local.vm.synced_folder ".", "/vagrant", disabled: true

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # in this case for VirtualBox:

    cpus = ENV['VAGRANT_VM_CPUS'] || 2
    local.vm.provider "virtualbox" do |vb|
      vb.name = "epics-training"
      vb.gui = true
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
      vb.customize ["modifyvm", :id, "--cpus", cpus]
      vb.customize ["modifyvm", :id, "--vram", "256"]
      # vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
      vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
      vb.memory = "4096"
    end

    local.vm.synced_folder "../ansible", "/ansible"

    # Install and run guest-side Ansible
    local.vm.provision "shell", :args => [use_apt], inline: <<-SHELL
      if [ "$1" == "true" ]; then
        apt-get update; apt-get install -y ansible
      else
        dnf install -y ansible
      fi
      ansible-galaxy install -r /ansible/requirements.yml || true
      ansible-playbook -i /ansible/hosts -t initial_setup -e initial_setup=true /ansible/playbook.yml
    SHELL

  end
end
