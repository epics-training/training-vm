# Install Tomcat
---
- name: Ensure tomcat group exists
  become: true
  ansible.builtin.group:
    name: "{{ tomcat_group }}"
    state: present

- name: Ensure tomcat user exists
  become: true
  ansible.builtin.user:
    name: "{{ tomcat_user }}"
    state: present
    group: "{{ tomcat_group }}"
    createhome: false
    system: true

- name: Ensure tomcat_home directory exists
  become: true
  ansible.builtin.file:
    path: "{{ tomcat_home }}"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"

- name: Download and install Tomcat
  become: true
  ansible.builtin.unarchive:
    src: "https://archive.apache.org/dist/tomcat/tomcat-9/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "{{ tomcat_home }}"
    remote_src: true
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    extra_opts: "--strip-components=1"
    creates: "{{ tomcat_home }}/bin"
    mode: "0755"

- name: Place neutral default page
  become: true
  ansible.builtin.copy:
    content: "Please select an application by adding the context to the URL."
    dest: "{{ tomcat_home }}/webapps/ROOT/index.html"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: "0640"

- name: Create tomcat log directory
  become: true
  ansible.builtin.file:
    path: /var/log/tomcat
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: "0770"

- name: Configure tomcat - server.xml, context.xml
  become: true
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ tomcat_home }}/conf/{{ item }}"
    mode: "0644"
  loop:
    - context.xml
    - server.xml
  notify:
    - Restart archiver-appliance

- name: Create log4j2 configuration
  become: true
  ansible.builtin.copy:
    src: log4j2.xml
    dest: "{{ tomcat_home }}/lib/log4j2.xml"
  notify:
    - Restart archiver-appliance