---
- name: Validate variables
  ansible.builtin.debug:
    msg: "modules to build: {{ epics_modules_list }}"

- name: Print all available facts for debugging
  # 'cd ansible; ansible localhost -m ansible.builtin.setup' will show this info
  ansible.builtin.debug:
    var: ansible_facts

- name: expand the root disk
  include_tasks: grow_disk.yml
  when: not in_container

- name: Replace mirrorlist with specific mirrors for Rocky
  when: ansible_distribution == 'Rocky'
  block:
    - name: Comment out mirrorlist for Rocky
      ansible.builtin.replace:
        path: "/etc/yum.repos.d/{{ item }}"
        regexp: "^(mirrorlist=.*)$"
        replace: "#\\1"
      with_items:
        - rocky.repo
        - rocky-extras.repo
        - rocky-devel.repo
        - rocky-addons.repo

    - name: Uncomment baseurl for Rocky
      ansible.builtin.replace:
        path: "/etc/yum.repos.d/{{ item }}"
        regexp: "^#(baseurl=.*)$"
        replace: "\\1"
      with_items:
        - rocky.repo
        - rocky-extras.repo
        - rocky-devel.repo
        - rocky-addons.repo

- name: APT Upgrade all packages; install Dev Tools and Gnome
  when: is_debian
  become: true
  block:
    - name: Upgrade all packages
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: true

    - name: Install Dev Tools and Gnome
      ansible.builtin.apt:
        name:
          - build-essential
          - git
          - vim
          - curl
          - sudo
          - openssl
          - "{{ distro.gnome_group }}"

- name: RPM Upgrade all packages; install Dev Tools and Gnome
  when: is_redhat
  become: true
  block:
    - name: Upgrade all packages
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: Install Dev Tools and Gnome
      ansible.builtin.dnf:
        name:
          - "@{{ distro.devel_group }}"
          - vim
          - sudo
          - openssl
          - "@{{ distro.gnome_group }}"
        allowerasing: true # fix version conflicts for curl and coreutils on Rocky

- name: Change default target to graphical.target
  file:
    src: /usr/lib/systemd/system/graphical.target
    dest: /etc/systemd/system/default.target
    state: link
  become: true
  when: not in_container

- name: Make XOrg the default display manager
  ansible.builtin.lineinfile:
    path: "{{ distro.gdm_config }}"
    search_string: "WaylandEnable"
    line: "WaylandEnable=false"
  become: true
  when: not in_container

- name: Create development user
  ansible.builtin.user:
    name: "{{ dev_user }}"
    shell: /bin/bash
    createhome: true
    password: ""
    comment: "EPICS Developer"
  become: true

- name: Make users passwordless for sudo in group wheel
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: "^%{{ dev_user }}"
    line: "%{{ dev_user }} ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"
  become: true

- name: Hide user vagrant from the GDM greeter (login user select)
  ansible.builtin.template:
    src: user.conf_nogreeter
    dest: /var/lib/AccountsService/users/vagrant

- name: Ensure that python refers to python3 (fixes issue with Rocky container)
  ansible.builtin.file:
    src: /usr/bin/python3
    dest: /usr/bin/python
    state: link
  become: true
